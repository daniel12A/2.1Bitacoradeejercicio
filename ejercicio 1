{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ejercicio 1","provenance":[],"authorship_tag":"ABX9TyOV2dLdy/IoBBV4KWl2KEWq"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"6Yb1Ii4Ct_9T","executionInfo":{"status":"ok","timestamp":1647383843837,"user_tz":360,"elapsed":775,"user":{"displayName":"SANTOS DANIEL DZIB CIAU","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh_mPNYNOunD-lLJGxPJ2Kam9NiEScBW3q_JrNv=s64","userId":"17686549783570304979"}},"outputId":"6ce48b35-26b5-4f47-c551-41d026df28eb"},"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 20, 6.0, 4.0, 5.0, 5.5, 5.75, 5.875, 5.9375, 5.96875]\n","X: 5.96875\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["import numpy as np\n","from matplotlib import pyplot as plt\n","\n","\n","def fx(t):\n","    return 300 + (((0.25*-32.27)/0.1)*t) - (np.power(0.25, 2)*-32.27) / \\\n","        (np.power(0.1, 2))*(1-np.exp((-0.1*t)/0.25))-0.01\n","\n","\n","def bisec(a, b, cota):\n","    error = 1\n","    i = 0\n","    listar = [1, 20]\n","    if fx(a)*fx(b) < 0:\n","        while error > cota:\n","            xr = (a+b)/2\n","            fxr = fx(xr)\n","            fxa = fx(a)\n","            \n","            if fxr * fxa < 0:\n","                b = xr\n","            elif fxr * fxa > 0:\n","                a = xr\n","            else:\n","                break\n","            listar.append(xr)\n","            xractual = xr\n","            \n","            if(len(listar) >= 2):\n","                xranterior = listar[-2]\n","                error = np.abs((xractual-xranterior)/xractual)\n","            else:\n","                error = 1\n","            i += 1\n","    else:\n","        print(\"No hay solución\")\n","    return listar\n","\n","\n","raices = bisec(2, 10, 0.01)\n","print(raices)\n","print(\"X:\", raices[-1])\n","\n","vect = np.arange(1, 10, 0.01)\n","plt.plot(vect, fx(vect))\n","plt.grid(\"x\")\n","plt.grid(\"y\")\n","plt.show()\n"]}]}